"
" This file was automatically generated by riml 0.4.0
" Modify with care!
"
function! maque#test#pane(...) abort
  let __splat_var_cpy = copy(a:000)
  if !empty(__splat_var_cpy)
    let params = remove(__splat_var_cpy, 0)
  else
    let params = {}
  endif
  if !empty(__splat_var_cpy)
    let name = remove(__splat_var_cpy, 0)
  else
    let name = 'test'
  endif
  let params = extend({'capture': 0, '_splitter': 'tmux new-window -d', 'minimal_shell': 1}, params)
  let g:pane = maque#tmux#pane#new(name, params)
  return g:pane
endfunction

function! maque#test#create(...) abort
  let __splat_var_cpy = copy(a:000)
  if !empty(__splat_var_cpy)
    let params = remove(__splat_var_cpy, 0)
  else
    let params = {}
  endif
  if !empty(__splat_var_cpy)
    let name = remove(__splat_var_cpy, 0)
  else
    let name = 'test'
  endif
  call maque#test#pane(params, name)
  call g:pane.create()
endfunction

function! maque#test#make(cmd, ...) abort
  let __splat_var_cpy = copy(a:000)
  if !empty(__splat_var_cpy)
    let params = remove(__splat_var_cpy, 0)
  else
    let params = {}
  endif
  if !empty(__splat_var_cpy)
    let name = remove(__splat_var_cpy, 0)
  else
    let name = 'test'
  endif
  call maque#test#create(params, name)
  call g:pane.make(a:cmd)
endfunction

function! maque#test#finish()
  call g:pane.kill('KILL')
  call g:pane.close()
  unlet g:pane
endfunction

function! maque#test#wait_until(predicate, ...)
  let __splat_var_cpy = copy(a:000)
  if !empty(__splat_var_cpy)
    let timeout = remove(__splat_var_cpy, 0)
  else
    let timeout = 10
  endif
  call maque#util#wait_until(a:predicate, timeout)
  let result = eval(a:predicate)
  Expect result == 1
endfunction
